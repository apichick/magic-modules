config := meta.(*transport_tpg.Config)

// current import_formats cannot import fields with forward slashes in their value
if err := tpgresource.ParseImportId([]string{"(?P<datastore_id>.+)"}, d, config); err != nil {
	return nil, err
}

nameParts := strings.Split(d.Get("name").(string), "/")
if len(nameParts) == 5 {
	// `organizations/{{"{{"}}org_name{{"}}"}}/analytics/datastores/{{"{{"}}datastore_id{{"}}"}}`
	orgId := fmt.Sprintf("organizations/%s", nameParts[1])
	if err := d.Set("org_id", orgId); err != nil {
		return nil, fmt.Errorf("Error setting org_id: %s", err)
	}
	if err := d.Set("datastore_id", nameParts[3]); err != nil {
		return nil, fmt.Errorf("Error setting datastore_id: %s", err)
	}
} else {
	return nil, fmt.Errorf(
		"Saw %s when the name is expected to have shape %s",
		d.Get("name"),
		"organizations/{{"{{"}}org_name{{"}}"}}/analytics/datastores/{{"{{"}}datastore_id{{"}}"}}")
}

// Replace import id for the resource id
id, err := tpgresource.ReplaceVars(d, config, "{{"{{"}}datastore_id{{"}}"}}")
if err != nil {
	return nil, fmt.Errorf("Error constructing id: %s", err)
}
d.SetId(id)

return []*schema.ResourceData{d}, nil
